.#{$fortitude-namespace}media {
  @include fortitude-media;
}

.#{$fortitude-namespace}media__object {
  @include fortitude-media__object;
}

.#{$fortitude-namespace}media__body {
  @include fortitude-media__body;
}

@if $fortitude-enable-media--small == true {
  /**
   * Small media objects.
  **/
  .#{$fortitude-namespace}media--small {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--small__object;
    }
    @if $fortitude-enable-media--rev == true {
      /**
       * Small reversed media objects.
      **/
      &.#{$fortitude-namespace}media--rev {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media--small--rev__object;
        }
      }
    }
  }
}

@if $fortitude-enable-media--large == true {
  /**
   * Large media objects.
  **/
  .#{$fortitude-namespace}media--large {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--large__object;
    }
    @if $fortitude-enable-media--rev == true {
      /**
       * Large reversed media objects.
      **/
      &.#{$fortitude-namespace}media--rev {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media--large--rev__object;
        }
      }
    }
  }
}

@if $fortitude-enable-media--rev == true {
  /**
   * Reversed image location (right instead of left). Extends `.media`.
  **/
  .#{$fortitude-namespace}media--rev {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--rev__object;
    }
  }
}

@if $fortitude-enable-media--flush == true {
  /**
   * Flush media objects have no space between the image- and text-content.
  **/
  .#{$fortitude-namespace}media--flush {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--flush__object;
    }
  }
}

@if $fortitude-enable-media--responsive == true {
  /**
   * Responsive media objects.
   *
   * There is a very pragmatic, simple implementation of a responsive media
   * object, which simply places the text-content beneath the image-content.
   *
   * We use a `max-width` media query because:
   *
   * a) it is the least verbose method in terms of amount of code required.
   * b) the media objectâ€™s default state is image-next-to-text, so its stacked
   *    state is the exception, rather than the rule.
  **/
  @media screen and (max-width: $fortitude-media-collapse-at) {
    .#{$fortitude-namespace}media--responsive {
      /**
       * Rework the spacings on regular media objects.
      **/
      > .#{$fortitude-namespace}media__object {
        @include fortitude-media--responsive__object;
      }
      @if $fortitude-enable-media--small == true {
        /**
         * Small responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also small media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--small {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media--responsive--small__object;
          }
        }
      }
      @if $fortitude-enable-media--large == true {
        /**
         * Large responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also large media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--large {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media--responsive--large__object;
          }
        }
      }
    }
  }
}
